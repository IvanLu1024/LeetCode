package other;

/**
 你和你的朋友，两个人一起玩 Nim游戏：桌子上有一堆石头，每次你们轮流拿掉 1 - 3 块石头。 拿掉最后一块石头的人就是获胜者。你作为先手。

 你们是聪明人，每一步都是最优解。 编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。

 示例:

 输入: 4

 输出: false

 解释: 如果堆中有 4 块石头，那么你永远不会赢得比赛；

 因为无论你拿走 1 块、2 块 还是 3 块石头，最后一块石头总是会被你的朋友拿走。

 */
public class Solution292 {
    /**
     *
     互相拿球谁先拿完问题：
     1）0~3个球：直接拿对应的数字就赢。
     2）4个球：无论先拿的拿1、2、3，对手只用补3、2、1就能获胜，所以有了前提，如果只剩下4个球，先拿的输。
     3）5、6、7个球：先拿的可以通过拿1、2、3个，使得对手从4开始拿，然后再进行2）操作。
     4）8个球：无论拿1、2、3个，对手都可以拿3、2、1个，使自己从4开始拿，所以剩下8个球，先拿的输
     5）...
     所以规律就很明显了，以4个球为一个单位，4的倍数就输。

     * @param n
     * @return
     */
    public boolean canWinNim(int n) {
        if (n%4==0){
            return false;
        }
        return true;
    }
}
